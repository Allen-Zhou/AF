//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Iesi.Collections.Generic;
using TelChina.AF.Persistant;

namespace TelChina.AF.Demo
{
    public partial class Question : EntityBase
    {
        private String _name;

        public virtual String Name
        {
            get
            {
                return this._name;
            }
            set
            {
                if (this._name != value)
                {
                    RaisPropertyChangIngEvent("Name");
                    _name = value;
                    RaisPropertyChangedEvent("Name");
                }
            }
        }

        private string entityComponet;

        public override string EntityComponent
        {
            get
            {
                return entityComponet;
            }
            set
            {
                this.entityComponet = value;
            }
        }
        public virtual ISet<Answer> GetAnswersSet()
        {
            return _answers;
        }


        private ISet<Answer> _answers;

        /// <summary>
        /// 答案
        /// </summary>
        public virtual ISet<Answer> Answers
        {
            get
            {
                if (_answers == null)
                {
                    _answers = new HashedSet<Answer>();
                }
                return _answers;
            }
            set
            {
                _answers = value;
            }
        }


        /*

        private IObservableSet<Answer> _answers = new ObservableSet<Answer>();

        /// <summary>
        /// 答案
        /// </summary>
        public virtual ISet<Answer> Answers
        {
            get
            {
                return _answers;
            }
            set
            {
                this.ChangePersonSet(value);
            }
        }

        private EventHandler<ItemChangedEventArgs<Answer>> __answerSetItemChangedHandler;

        private void ChangePersonSet(ISet<Answer> answers)
        {
            if (answers == null)
            {
                return;
            }
            if (this.__answerSetItemChangedHandler == null)
            {
                this.__answerSetItemChangedHandler = this.__answerSetItemChangedHandler;
            }

            if (this._answers != null)
            {
                this._answers.ItemChanged -= this.__answerSetItemChangedHandler;
            }

            foreach (var answer in answers)
            {
                this._answers.Add(answer);
            }

            this._answers.ItemChanged += this.OnAnswerSetItemChanged;
        }

        private void OnAnswerSetItemChanged(object sender, ItemChangedEventArgs<Answer> e)
        {
            var answer = e.Item;

            if (e.Type == ItemChangedType.Added)
            {
                if (answer.Question != null)
                {
                    answer.Question.Answers.Remove(answer);
                }

                answer.Question = this;
            }
            else
            {
                answer.Question = null;
            }
        }
         * */
    }
}


